@using PESOapps.Shared.Pages.Shared
@using PESOapps.Shared.Services
@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject UiStateService UiState
        @if (isLoading)
        {
        <Loading IsLoading="@isLoading" Message="Loading..." />
        }
        else
        {
       <div class="main-container-layout @UiState.SidebarClass">
        @if (Navigation.Uri.EndsWith("/dash", StringComparison.OrdinalIgnoreCase))
        {
            <div class="navigation-section dboard">
                <NavMenuDash />
            </div>
        }
        else if (Navigation.Uri.EndsWith("/employer", StringComparison.OrdinalIgnoreCase))
        {
            <div class="navigation-section dboard">
                <NavMenuDashEmployer />
            </div>
        }
        else if (Navigation.Uri.EndsWith("/municipality", StringComparison.OrdinalIgnoreCase))
        {
            <div class="navigation-section dboard">
                <NavMenuDashMunicipality />
            </div>
        }
        else if (Navigation.Uri.EndsWith("/Admin", StringComparison.OrdinalIgnoreCase))
        {
            <div class="navigation-section dboard">
                <NavMenuDashAdmin />
            </div>
        }
        else
        {
            <div class="navigation-section">
                <NavMenu />
            </div>
        }

    <div class="cover">
        @* <img class="bg-image" src="_content/PESOapps.Shared/images/banner_img.png"> *@
        <img class="bg-image" src="_content/PESOapps.Shared/images/gov_Uy.png"> 
    </div>
    <div class="coverlog">
        <model-viewer src="_content/PESOapps.Shared/glb/pgmlogo.glb"
                      autoplay
                      auto-rotate
                      style="width: 400px; height: 400px;">
        </model-viewer>
    </div>
    @if (Navigation.Uri.EndsWith("/dash", StringComparison.OrdinalIgnoreCase))
    {
        <main class="main-content dboard">
            <article class="main-container">
                @Body
            </article>
        </main>
    }
    else if(Navigation.Uri.EndsWith("/employer", StringComparison.OrdinalIgnoreCase))
    {
        <main class="main-content dboard">
            <article class="main-container">
                @Body
            </article>
        </main>
    }
    else if (Navigation.Uri.EndsWith("/municipality", StringComparison.OrdinalIgnoreCase))
    {
        <main class="main-content dboard">
            <article class="main-container">
                @Body
            </article>
        </main>
    }
        else if (Navigation.Uri.EndsWith("/admin", StringComparison.OrdinalIgnoreCase))
        {
            <main class="main-content dboard">
                <article class="main-container">
                    @Body
                </article>
            </main>
        }
    else
    {
        <main>
            <article class="main-container menus">
                @Body
            </article>
        </main>
    }
    <div id="themeButton" class="theme btn light-mode" @onclick="ToggleTheme">
        <div class="btn__indicator">
            <div class="btn__icon">
                <i id="icons" class="fa-solid fa-sun"></i>
            </div>
        </div>
    </div>
    <div class="footer">
        <div class="footer-container">
            <div class="footer-div">
                <a class="form-link" href="https://www.misamisoriental.gov.ph/" target="_blank">© 2025 Misamis Oriental. All rights reserved.</a>
            </div>
        </div>
    </div>
</div>
}
@code {
    private async Task ToggleTheme()
    {
        await JS.InvokeVoidAsync("toggleTheme");
    }

    protected override void OnInitialized()
    {
        UiState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UiState.OnChange -= StateHasChanged;
    }

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        await LoadDataAsync();
        isLoading = false;
    }

    private async Task LoadDataAsync()
    {
        // Simulate data loading or fetch API
        await Task.Delay(2000);
    }

}

