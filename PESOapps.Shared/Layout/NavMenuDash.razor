@using Microsoft.VisualBasic
@using PESOapps.Shared.Services
@using System.Text.Json
@using System.Net.Http.Headers
@using webapi_peso.ViewModels
@inject AuthService AuthService
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject UiStateService UiState

@if (!isUserLoggedIn)
{
    <p>Redirecting to login...</p>
}
else if (profile == null)
{
    <p>Loading...</p>
}
else
{
    <div class="navbars dash">
        <div class="navbar-container">
            <div class="navbar-logo">
                <div class="log-diver">
                    <img src="_content/PESOapps.Shared/images/peso.png" />
                    <div class="log-inside-conts">
                        <div class="log-inside">
                            <h5>P</h5><h5 class="ext">ublic</h5>
                            <h5>E</h5><h5 class="ext">mployment</h5>
                            <h5>S</h5><h5 class="ext">ervice</h5>
                            <h5>O</h5><h5 class="ext">ffice</h5>
                        </div>
                        <div class="log-inside">
                            <span>Misamis Oriental</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="navbar-option has-submenu">
                <div class="nav-item has-submenu">
                    <NavLink class="dashnav" href="Profile/dash">
                        <img src="https://pesoapi.misamisoriental.gov.ph/image/profile_placeholder.png" alt="profile" class="img-thumbnail mb-3" style="border-radius:100%;height:30px;width:34px">
                    </NavLink>
                    <div class="nav-sub">
                        <div class="nav-item" @onclick="AuthService.Logout">
                            Logout <i class="fa-solid fa-arrow-right-from-bracket"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="sidebar-container">
        <button class="btn-toggle" @onclick="UiState.ToggleSidebar">
        </button>

        <NavLink class="sidebar-logo" href="Profile/dash">
            <img src="_content/PESOapps.Shared/svg/user-solid.svg" class="dash-icon"  />
            <p>@profile.ApplicantInformation?.FirstName @profile.ApplicantInformation?.SurName</p>
        </NavLink>
        <div class="sidebar-nav">
            <NavLink class="dashnav-links" href="Joblist/dash">
                <img src="_content/PESOapps.Shared/svg/briefcase-solid.svg" class="dash-icon" />
                <span>Job List</span>
            </NavLink>
        </div>
    </div>
}

@code {
    private bool isUserLoggedIn = false;
    private AccountAndInformationViewModel? profile;
    private bool loaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !loaded)
        {
            loaded = true;

            try
            {
                var userId = await JS.InvokeAsync<string>("localStorage.getItem", "UserId");
                var token = await JS.InvokeAsync<string>("localStorage.getItem", "Token");
                var isLoggedIn = await JS.InvokeAsync<string>("localStorage.getItem", "IsLoggedIn");

                if (!string.IsNullOrWhiteSpace(userId) && isLoggedIn == "true" && !string.IsNullOrWhiteSpace(token))
                {
                    isUserLoggedIn = true;

                    // Add token to the request headers
                    Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

                    var response = await Http.GetAsync($"http://localhost:5167/api/Applicant/GetApplicantProfile/{userId}");
                    if (response.IsSuccessStatusCode)
                    {
                        var json = await response.Content.ReadAsStringAsync();
                        profile = JsonSerializer.Deserialize<AccountAndInformationViewModel>(json,
                            new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                        StateHasChanged(); // Update UI
                    }
                    else
                    {
                        Console.WriteLine($"Failed to load profile: {response.StatusCode}");
                        await AuthService.Logout();
                    }
                }
                else
                {
                    Navigation.NavigateTo("/pesobeta/Login", forceLoad: true);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                Navigation.NavigateTo("/pesobeta/Login", forceLoad: true);
            }
        }
    }


}
