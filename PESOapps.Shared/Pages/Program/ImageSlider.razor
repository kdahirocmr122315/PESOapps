@inject IJSRuntime JS

<!-- Swiper Container -->
<div class="swiper">
    <div class="swiper-wrapper">
        @foreach (var image in Images)
        {
            <div class="swiper-slide">
                <img src="@image" alt="Image"
                     style="width:100%; height:350px; border-radius: 15px; object-fit: cover; cursor:pointer;"
                     @onclick="() => OpenImagePopup(image)" />
            </div>
        }
    </div>
    <div class="swiper-pagination"></div>
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
</div>

<!-- Modal for Zoomed Image -->
@if (IsImagePopupOpen)
{
    <div class="image-modal" @onclick="CloseImagePopup">
        <div class="image-modal-content">
            <img src="@SelectedImage" alt="Zoomed Image" />
        </div>
    </div>
}

@code {
    [Parameter] public List<string> Images { get; set; } = new();

    private bool IsImagePopupOpen = false;
    private string SelectedImage = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initSwiperMultiSlide");
        }
    }

    private void OpenImagePopup(string image)
    {
        SelectedImage = image;
        IsImagePopupOpen = true;
    }

    private void CloseImagePopup()
    {
        IsImagePopupOpen = false;
    }
}
