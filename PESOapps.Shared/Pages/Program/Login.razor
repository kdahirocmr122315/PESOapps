@page "/Login"
@using Microsoft.AspNetCore.Components.ProtectedBrowserStorage
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ProtectedSessionStorage SessionStorage


<PageTitle>Login</PageTitle>

<div class="login-containers">
    <div class="login-cards">
        <h2>Admin Login</h2>

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="error-message">@Message</div>
        }

        <div class="input-groups">
            <label>Username</label>
            <input type="text" @bind="username" placeholder="Enter your username" />
        </div>

        <div class="input-groups">
            <label>Password</label>
            <input type="password" @bind="password" placeholder="Enter your password" />
        </div>

        <button @onclick="LoginUser">Login</button>
    </div>
</div>

@code {
    private string? username { get; set; }
    private string? password { get; set; }
    private string? Message { get; set; }
    private string apiUrl = "http://localhost:5167/Log/User";
    private string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE4Mjc5ODUzMjMsImlzcyI6InBtaXMiLCJhdWQiOiJtaXNhbWlzIG9yaWVudGFsIn0.TNAG-ODpEb_gfDf_sRfvK5wFvloBU_pcd9WKY6ajQfk";

    private async Task LoginUser()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Post, apiUrl)
            {
                Content = new StringContent($"{{\"username\":\"{username ?? ""}\", \"password\":\"{password ?? ""}\"}}", 
                    System.Text.Encoding.UTF8, "application/json")
            };
            request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

            var response = await Http.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadAsStringAsync();
                if (result.ToLower().Trim() == "true")
                {
                    await SessionStorage.SetAsync("IsLoggedIn", true); // Store login state
                    Navigation.NavigateTo("/pesobeta/dashboard");
                }
                else
                {
                    Message = "Invalid credentials. Please try again.";
                }
            }
            else
            {
                Message = "Error connecting to server.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }
}
